#basic settings
set shell sh
set preview true
set drawbox true
set previewer /home/james/.config/lf/preview.sh
set cleaner /home/james/.config/lf/lf-ueberzug-cleaner.sh

#custom functions
cmd open  ${{	
  case $(file --mime-type "$f" -bL) in	
    text/*|application/json) $EDITOR "$f";;
    image/gif) sxiv -a "$f";;
    image/*) sxiv "$f";;
    application/pdf) $READER "$f";;
    *) xdg-open "$f";;
  esac
}}

#set permissions
cmd chmod %printf "Mode Bits: "; read ans; for file in "$fx"; do chmod $ans $file; done; lf -remote 'send reload';

#archive bindings
cmd unzip ${{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.tar|*.tar.gz|*.tgz) tar -xf "$f" ;;
    *.rar) unrar x "$f" ;;
    *) echo "Unsupported format" ;;
  esac
}}

#trash cli bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    
    #extract the substring from start of string up to delimiter.
    #this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    
    #if there's only one element left, set `files` to an empty string.
    #this causes us to exit this `while` loop.
    #else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

cmd umount %udiskie-umount "$f"; lf -remote 'send reload'; 

cmd dr %dragon-drag-and-drop -a -x $fx
cmd dri %dragon-drag-and-drop $fx

cmd mkdir %mkdir "$1"
cmd touch %touch "$1"

#keybindings

#blank mapping unbinds key
map t

map tt trash

map ee $$EDITOR "$f"
map se $sudo $EDITOR "$f"

#set wallpaper
map bg $feh --bg-fill "$f"

#reload lf
map R  reload
